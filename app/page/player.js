import React from 'react';import Progress from '../components/progress'import './player.less'import { Link } from 'react-router'import Pubsub from 'pubsub-js'var duration =null,currentTime=0;let Player = React.createClass({	getInitialState() {		return {			progress: '-',			play: true,			volume: 80		}	},	componentDidMount(){		$('#player').bind($.jPlayer.event.timeupdate, (e) => {			duration = e.jPlayer.status.duration;			currentTime = e.jPlayer.status.currentTime;			this.setState({				progress: e.jPlayer.status.currentPercentAbsolute			})		});	},	componentWillUnmount() {		$('#player').unbind($.jPlayer.event.timeupdate);	},	volumeChangeHandler(volume){		$("#player").jPlayer("volume",volume);		this.setState({			volume: volume*100		})	},	progressChangeHandler(progress){		$('#player').jPlayer('play',duration * progress);	},	controlPlay(){		if(this.state.play){			$('#player').jPlayer('pause');			this.setState({				play: false			})		}else{			$('#player').jPlayer('play');			this.setState({				play: true			})		}					},	stop(){		$('#player').jPlayer('pause',0);	},	backward(){		currentTime = currentTime<5?5:currentTime;		$('#player').jPlayer('play',currentTime-5);		this.setState({			play: true		})	},	forward(){		$('#player').jPlayer('play',currentTime+5);		this.setState({			play: true		})	},	playPrev(){		Pubsub.publish('PLAY_PREV');	},	playNext(){		Pubsub.publish('PLAY_NEXT');	},	render() {		var playBtn;		if(this.state.play){			playBtn = <span className="glyphicon  glyphicon-pause"></span>;		}else{			playBtn = <span className="glyphicon  glyphicon-play"></span>;		}		return (			<div className="player-page">								<div className="container">									    <div className="thumbnail">				    	<h2 className="btn-link text-center"><Link to="/list">我的歌单</Link>	</h2>						<img src={this.props.currentMusicItem.cover} alt={this.props.currentMusicItem.artist} />						<div className="caption">							<h3>{this.props.currentMusicItem.title}</h3>							<p>{this.props.currentMusicItem.artist}</p>													</div>						    					</div>				</div>				<div className="control">					<div className="control-left">						<div className="image-wrapper">							<img id="playerBarArt" src={`${this.props.currentMusicItem.cover?this.props.currentMusicItem.cover:'/static/images/default_album_med_2x.png'}`} alt={this.props.currentMusicItem.artist}  />						</div>						<div className="music-info">							<h3>{this.props.currentMusicItem.title}</h3>							<p>{this.props.currentMusicItem.artist}</p>						</div>					</div>					<div className="control-body">						<Progress 							progress = {								this.state.progress							} 							onProgressChange = { this.progressChangeHandler}							barColor = "#f00"						>						</Progress>						<div className="btn-bar">							<button className="btn" onClick={this.playPrev}><span className="glyphicon glyphicon-fast-backward"></span></button>							<button className="btn"  onClick={this.backward}><span className="glyphicon glyphicon-backward"></span></button>							<button className="btn" onClick={this.controlPlay} ref = "playBtn">																<span className={`glyphicon  ${this.state.play? 'glyphicon-pause': 'glyphicon-play' }`}></span>							</button>							<button className="btn" onClick={this.stop}><span className="glyphicon glyphicon-stop"></span></button>							<button className="btn" onClick={this.forward}><span className="glyphicon glyphicon-forward"></span></button>							<button className="btn" onClick={this.playNext}><span className="glyphicon glyphicon-fast-forward"></span></button>							<div className="volume">								<span className="glyphicon glyphicon-volume-down"></span>								<Progress 									progress = {										this.state.volume									} 									onProgressChange = { this.volumeChangeHandler}									barColor = "#0f0"								>								</Progress>								<span className="glyphicon glyphicon-volume-up"></span>							</div>						</div>					</div>									</div>			</div>		)	}});export  default Player;